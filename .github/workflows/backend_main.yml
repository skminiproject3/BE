name: Build and Push Backend Docker Image (Auto Tag)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: miniproject3-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push Backend Image

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build JAR with Maven
        run: mvn clean package -Dmaven.test.skip=true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 최신 버전 조회 후 +0.1 증가
      - name: Get latest tag and bump version
        id: bump
        run: |
          sudo apt-get update && sudo apt-get install -y jq curl
          IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}
          echo "Fetching tags for $IMAGE..."
          LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/$IMAGE/tags/?page_size=100" | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+$' | sort -V | tail -n 1)
          
          if [ -z "$LATEST_TAG" ] || [ "$LATEST_TAG" = "null" ]; then
            NEW_TAG="0.1"
          else
            NEW_TAG=$(awk -F. '{printf "%d.%d", $1, $2 + 1}' <<< "$LATEST_TAG")
          fi

          echo "Latest: $LATEST_TAG → New: $NEW_TAG"
          echo "tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ steps.bump.outputs.tag }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest

      - name:  Done
        run: |
          echo "Backend Docker Image successfully built and pushed!"
          echo " - ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ steps.bump.outputs.tag }}"
          echo " - ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest"
